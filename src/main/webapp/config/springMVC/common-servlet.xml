<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"

       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:websocket="http://www.springframework.org/schema/websocket"

       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans.xsd

				http://www.springframework.org/schema/context
				http://www.springframework.org/schema/context/spring-context.xsd

				http://www.springframework.org/schema/mvc
				http://www.springframework.org/schema/mvc/spring-mvc.xsd

				http://www.springframework.org/schema/aop
				http://www.springframework.org/schema/aop/spring-aop.xsd

                  http://www.springframework.org/schema/websocket
                 http://www.springframework.org/schema/websocket/spring-websocket.xsd">

    <!-- :: 공통적인 사항을 설정한 common-servlet.xml 사용. -->

    <!--  ㅇ 어노테이션 기반 :: Spring Framework 사용.
    		ㅇ @Controller annotation 선언된 Bean 만 Wiring
		   ㅇ @Service / @Repository  annotation 선언된 Bean 은 Scan 제외 -->
    <context:component-scan base-package="com.project">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <mvc:annotation-driven/>

    <!-- :: 인터셉터 설정 -->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/user/**"/>
            <bean class="com.project.common.web.LogonCheckInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>-->

    <!-- ::  Annotation 지원 HandlerMapping 선언  -->
    <!--
        # Spring 4.X 에서 사용. 5.X에서 Deprecation 됨
        <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>

        # Spring 5.X 에서 아래의 Bean 사용
     -->

    <!-- :: 디스패쳐 서블릿을 경유하지 않는 static contents -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!--  :: ViewResolver 선언 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"/>

    <!-- 파일 업로드 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>

    <!-- :: 컨트롤러 로그 찍기 -->
    <aop:config>
        <aop:aspect ref="logAspect">
            <aop:around method="controllerLog" pointcut="execution(* com.project..*Controller*.*(..))"/>
        </aop:aspect>
    </aop:config>
    <!-- websocket handler -->
    <bean id="echoHandler" class="com.project.notice.controller.NoticeController" />
    <websocket:handlers>
        <websocket:mapping handler="echoHandler" path="/echo" />
        <websocket:handshake-interceptors>
            <bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
        </websocket:handshake-interceptors>
        <websocket:sockjs websocket-enabled="true"/>
    </websocket:handlers>
    <!-- 	:: exception resolver  선언 :: 서술적 / 선언적 예외처리
            :: Servlet 에서의 선언적 예외처리를 다시 생각하며....  -->
    <!-- 	<bean id="exceptionResolver"
                    class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">

            <property name="exceptionMappings">
                <props>
                    <prop key="java.lang.NullPointerException">/common/nullError.jsp</prop>
                    <prop key="java.lang.NumberFormatException">/common/numberFormatError.jsp</prop>
                </props>
            </property>

            <property name="defaultErrorView"	value="/common/error.jsp" />

        </bean> -->

</beans>