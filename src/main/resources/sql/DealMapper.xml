<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DealMapper">
    <resultMap id="dealSelectMap" type="deal">
        <result property="dealBoardNum" column="deal_board_num" jdbcType="INTEGER"/>
        <result property="boardCategory" column="board_category" jdbcType="CHAR"/>
        <result property="dealStatus" column="deal_status" jdbcType="CHAR"/>
        <result property="user.userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="dealTitle" column="deal_title" jdbcType="VARCHAR"/>
        <result property="dealText" column="deal_text" jdbcType="VARCHAR"/>
        <result property="dealRegDate" column="deal_reg_date" jdbcType="DATE"/>
        <result property="productName" column="product_name" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="INTEGER"/>
        <result property="tag" column="tag" jdbcType="VARCHAR"/>
        <result property="viewCount" column="view_count" jdbcType="INTEGER"/>
        <result property="villCode" column="vill_code" jdbcType="VARCHAR"/>
        <result property="dealId" column="deal_id" jdbcType="VARCHAR"/>
        <result property="dealModeCheck" column="deal_mode_check" jdbcType="CHAR"/>
        <result property="charNum" column="char_num" jdbcType="INTEGER"/>
        <result property="review" column="review" jdbcType="VARCHAR"/>
        <result property="reviewPt" column="review_pt" jdbcType="INTEGER"/>
        <result property="dealEndDate" column="deal_end_date" jdbcType="DATE"/>
        <result property="dealDate" column="deal_date" jdbcType="DATE"/>
        <result property="likeCount" column="like_count" jdbcType="INTEGER"/>
        <result property="dealLocation" column="deal_location" jdbcType="VARCHAR"/>
        <result property="dealCalenderTitle" column="deal_calender_title" jdbcType="VARCHAR"/>
        <collection property="files" column="deal_board_num" ofType="com.project.domain.File"
                    select="getDealBoardFiles"/>

    </resultMap>

    <resultMap type="com.project.domain.File" id="FileResultMap">
        <result property="fileNum" column="file_num" jdbcType="INTEGER"/>
        <result property="boardNum" column="board_num" jdbcType="VARCHAR"/>
        <result property="boardCategory" column="board_category" jdbcType="VARCHAR"/>
        <result property="fileName" column="file_name" jdbcType="INTEGER"/>
    </resultMap>

    <select id="getDealBoardFiles" resultMap="FileResultMap">
        SELECT *
        FROM files
        WHERE board_num = #{boardNum}
          AND (board_category = '08'
            OR board_category = '09')
        ORDER BY file_num DESC
    </select>


    <!--현재 파일 조회-->
    <select id="listDealBoardFile" parameterType="int" resultType="String">
        SELECT file_name
        FROM files
        WHERE board_num = #{boardNum}
          AND (board_category = '08'
            OR board_category = '09')
    </select>

    <!--파일 삭제-->
    <delete id="deleteDealBoardFile" parameterType="map">
        DELETE files
        <where>
            board_num = #{boardNum}
            AND (board_category = '08' OR board_category = '09')
            <foreach collection="deleteFileNames" item="fileName" open="AND file_name IN (" separator="," close=")">
                #{fileName}
            </foreach>
        </where>
    </delete>

    <!--파일 등록-->
    <insert id="addDealBoardFile" parameterType="com.project.domain.File">
        INSERT
        INTO files(file_num,
                   board_num,
                   board_category,
                   file_name)
        VALUES (seq_files.NEXTVAL, #{boardNum}, #{boardCategory}, #{fileName})
    </insert>
    <!--신규 넘버 조회-->
    <select id="getDealNum" parameterType="String" resultType="int">
        SELECT deal_board_num
        FROM (SELECT ROWNUM,
                     deal_board_num
              FROM deal
              WHERE user_id = #{userId}
              ORDER BY deal_reg_date DESC)
        WHERE ROWNUM = 1
    </select>


    <!--게시물 작성-->
    <insert id="addDeal" parameterType="deal">
        INSERT INTO deal(deal_board_num,
                         board_category,
                         deal_status,
                         user_id,
                         deal_title,
                         deal_text,
                         deal_reg_date,
                         product_name,
                         price,
                         tag,
                         view_count,
                         vill_code)
        values (seq_deal.NEXTVAL,
                #{boardCategory},
                #{dealStatus},
                #{user.userId:VARCHAR},
                #{dealTitle:VARCHAR},
                #{dealText:VARCHAR},
                SYSDATE,
                #{productName:VARCHAR},
                #{price:NUMERIC},
                #{tag:VARCHAR},
                0,
                #{villCode:VARCHAR})
    </insert>
    <!--    &lt;!&ndash;게시물 상세조회&ndash;&gt;-->
    <select id="getDeal" parameterType="int" resultMap="dealSelectMap">
        SELECT*
        from deal
        where deal_board_num = #{dealBoardNum}
    </select>
    <!--    USER IMAGE가져오기 도전-->
    <select id="getImage" parameterType="String" resultType="String">
        select user_image
        from USERS
        where USER_ID = #{userId}
    </select>
    <!--신뢰온도,
           파일-->
    <!--    &lt;!&ndash;게시물 수정&ndash;&gt;-->
    <update id="updateDeal" parameterType="deal">
        UPDATE DEAL
        <set>
            deal_title=#{dealTitle:VARCHAR},
            deal_status=#{dealStatus:CHAR},
            deal_text=#{dealText:VARCHAR},
    board_category=#{boardCategory:CHAR},
            product_name=#{productName:VARCHAR},
            price=#{price:NUMERIC}

        </set>

        <where>deal_board_num=#{dealBoardNum}</where>
    </update>

    <!--게시물 삭제-->
    <delete id="deleteDeal" parameterType="int">
        DELETE deal
        <where>
            deal_board_num=#{dealBoardNum}
        </where>
    </delete>


    <sql id="listDealBoardSql">

        SELECT *
        FROM deal
        <if test="(boardCategory=='08' or boardCategory=='09')">
            WHERE board_category = #{boardCategory}

            <if test="(search.searchCondition == 1 or search.searchCondition == 0)">
                AND deal_title LIKE ('%' || #{search.searchKeyword} || '%')
                ORDER BY deal_reg_date DESC
            </if>
            <if test="search.searchCondition == 2">
                AND product_name LIKE ('%' || #{search.searchKeyword} || '%')
                ORDER BY deal_reg_date DESC
            </if>

        </if>
        <if test="boardCategory=='99'">
            <if test="(search.searchCondition == 1 or search.searchCondition == 0)">
                WHERE deal_title LIKE ('%' || #{search.searchKeyword} || '%')
                ORDER BY deal_reg_date DESC
            </if>
            <if test="search.searchCondition == 2">
                WHERE product_name LIKE ('%' || #{search.searchKeyword} || '%')
                ORDER BY deal_reg_date DESC
            </if>
        </if>
    </sql>


    <!--게시물 목록 조회.. .-->
    <select id="getListDeal" parameterType="map" resultMap="dealSelectMap">
        SELECT * FROM (
        SELECT ROWNUM row_num, vt.* FROM (
        <include refid="listDealBoardSql"/>
        ) vt
        <if test="search.currentPage*search.pageSize!=0">
            WHERE ROWNUM &lt;= #{search.currentPage}*#{search.pageSize}
        </if>
        )
        <where>
            <if test="search.currentPage*search.pageSize!=0">
                row_num >= ((#{search.currentPage}-1)*#{search.pageSize}+1)
            </if>
        </where>
    </select>
    <!--    <select id="getListDeal" parameterType="map" resultMap="dealSelectMap">-->
    <!--       	SELECT inner_table.* , ROWNUM AS row_seq-->
    <!--        FROM		(	SELECT deal_board_num, deal_title, deal_text, user_id, deal_reg_date ,tag-->
    <!--        FROM deal-->
    <!--<if test="boardCategory !=0 ">-->
    <!--    <where> board_category=#{boardCategory}</where>-->
    <!--</if>-->
    <!--        <if test="searchCondition != null">-->
    <!--            <where>-->

    <!--                <if test="(searchCondition == 0 and searchKeyword !='' )">-->
    <!--                    deal_title = #{searchKeyword}-->
    <!--                </if>-->
    <!--                <if test="(searchCondition == 1 and searchKeyword !='') ">-->
    <!--                    tag = #{searchKeyword}-->
    <!--                </if>-->


    <!--            </where>-->
    <!--        </if>-->

    <!--        ORDER BY deal_board_num ) inner_table-->
    <!--        WHERE ROWNUM >= 0-->

    <!--    </select>-->

    <select id="getTotalCount" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM (
        <include refid="listDealBoardSql"/>
        )
    </select>

    <!--    WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}-->


    <!--    <select  id="getTotalCount"  parameterType="search"	 resultType="int">-->
    <!--        SELECT COUNT(*)-->
    <!--        FROM(	SELECT deal_board_num,deal_title,deal_text-->
    <!--        FROM deal-->
    <!--        <if test="searchCondition != null">-->
    <!--            <where>-->
    <!--                <if test="searchCondition == 0 and searchKeyword !='' ">-->
    <!--                    deal_title= #{searchKeyword}-->
    <!--                </if>-->
    <!--                <if test="searchCondition == 1 and searchKeyword !='' ">-->
    <!--                    product_name = ${searchKeyword}-->
    <!--                </if>-->
    <!--                <if test="searchCondition == 2 and searchKeyword !='' ">-->
    <!--                    tag = ${searchKeyword}-->
    <!--                </if>-->
    <!--            </where>-->
    <!--        </if> ) countTable-->
    <!--    </select>-->

    <select id="getUserId" resultType="com.project.domain.Deal">

        select user_id, review, review_pt
        from deal
        where deal_board_num = #{dealBoardNum}


    </select>
    <update id="updateReview" parameterType="deal">
        update DEAL
        <set>
            review=#{review},
            review_pt=#{reviewPt},
            deal_status='2',
            deal_id=#{dealId}
        </set>
        <where>deal_board_num=#{dealBoardNum}</where>
    </update>
    <select id="getReviewPt" parameterType="deal" resultType="int">
        select NVL(AVG(review_pt), 0)
        from deal
        where user_id = #{user.userId}
    </select>

    <update id="addDealCalender" parameterType="deal">
        UPDATE DEAL
        <set>
            deal_calender_title = #{dealCalenderTitle}
            ,deal_date = #{dealDate}
            ,deal_location =#{dealLocation}
            ,deal_id = #{dealId}
            ,deal_mode_check = '1'
        </set>
        WHERE deal_board_num = #{dealBoardNum}
    </update>
    <!--조회수-->
    <update id="updateViewCount" parameterType="map">
        update DEAL
        <set>
            view_count=#{viewCount}+1
        </set>
        <where>deal_board_num=#{dealBoardNum:NUMERIC}</where>
    </update>

    <select id="getViewCount" parameterType="map" resultType="int">
        SELECT view_count
        FROM deal
        WHERE deal_board_num = #{dealBoardNum}


    </select>
    <select id="getListDealCalender" parameterType="String" resultMap="dealSelectMap">
        SELECT *
        FROM DEAL
        where deal_id = '${user}'
           or user_id = '${user}'
            and DEAL_MODE_CHECK = '1'
    </select>

    <update id="dealUpdateCalender" parameterType="deal">
        UPDATE deal
        <set>
            deal_date = #{dealDate},
            deal_location = #{dealLocation},
            deal_calender_title=#{dealCalenderTitle}
        </set>
        WHERE deal_board_num = #{dealBoardNum}
    </update>


</mapper>