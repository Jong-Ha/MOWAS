<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ClubMapper">

    <resultMap type="com.project.domain.Club" id="ClubResultMap">
        <result property="clubNum" column="club_num" jdbcType="INTEGER"/>
        <result property="clubMasterId" column="club_master_id" jdbcType="VARCHAR"/>
        <result property="interList" column="inter_list" jdbcType="CHAR"/>
        <result property="clubName" column="club_name" jdbcType="VARCHAR"/>
        <result property="clubText" column="club_text" jdbcType="VARCHAR"/>
        <result property="villCode" column="vill_code" jdbcType="CHAR"/>
        <result property="currentCluber" column="current_cluber" jdbcType="INTEGER"/>
        <result property="clubCreateDate" column="club_create_date" jdbcType="DATE"/>
        <result property="clubImage" column="club_image" jdbcType="VARCHAR"/>
        <result property="gatherCheck" column="gather_check" jdbcType="CHAR"/>
        <result property="tag" column="club_tag" jdbcType="VARCHAR"/>
        <result property="clubDeleteCheck" column="club_delete_check" jdbcType="CHAR"/>
        <result property="likeCheck" column="like_check" jdbcType="CHAR"/>
    </resultMap>

    <resultMap type="com.project.domain.Cluber" id="CluberResultMap">
        <result property="clubUserNum" column="club_user_num" jdbcType="INTEGER"/>
        <result property="user.userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="user.userImage" column="user_image" jdbcType="VARCHAR"/>
        <result property="clubNum" column="club_num" jdbcType="INTEGER"/>
        <result property="cluberStatus" column="cluber_status" jdbcType="CHAR"/>
        <result property="clubRegDate" column="club_reg_date" jdbcType="DATE"/>
        <result property="clubApplyDate" column="club_apply_date" jdbcType="DATE"/>
        <result property="cluberText" column="cluber_text" jdbcType="VARCHAR"/>
        <result property="clubOutText" column="club_out_text" jdbcType="VARCHAR"/>
        <result property="clubOutDate" column="club_out_date" jdbcType="DATE"/>
        <result property="blacklistDate" column="blacklist_date" jdbcType="DATE"/>
        <result property="blacklistText" column="blacklist_text" jdbcType="VARCHAR"/>
        <result property="blacklistCheck" column="blacklist_check" jdbcType="CHAR"/>
    </resultMap>

    <resultMap type="com.project.domain.ClubMasterBoard" id="ClubMasterBoardResultMap">
        <result property="boardNum" column="club_master_board_num" jdbcType="INTEGER"/>
        <result property="clubNum" column="club_num" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="text" column="text" jdbcType="VARCHAR"/>
        <result property="regDate" column="reg_date" jdbcType="DATE"/>
        <result property="updateDate" column="update_date" jdbcType="DATE"/>
        <collection property="files" column="club_master_board_num" ofType="com.project.domain.File"
                    select="getClubMasterBoardFiles"/>
    </resultMap>

    <resultMap type="com.project.domain.File" id="FileResultMap">
        <result property="fileNum" column="file_num" jdbcType="INTEGER"/>
        <result property="boardNum" column="board_num" jdbcType="VARCHAR"/>
        <result property="boardCategory" column="board_category" jdbcType="VARCHAR"/>
        <result property="fileName" column="file_name" jdbcType="INTEGER"/>
    </resultMap>

    <select id="getClubMasterBoardFiles" parameterType="int" resultMap="FileResultMap">
        SELECT *
        FROM files
        WHERE board_num = #{clubMasterBoardNum}
          AND board_category = '04'
        ORDER BY file_num DESC
    </select>

    <resultMap type="com.project.domain.CalendarCluber" id="CalendarCluberResultMap">
        <result property="clubCalendarApplyNum" column="club_calendar_apply_num" jdbcType="INTEGER"/>
        <result property="clubCalendarNum" column="club_calendar_num" jdbcType="VARCHAR"/>
        <result property="user.userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="user.userImage" column="user_image" jdbcType="VARCHAR"/>
        <result property="applyStatus" column="apply_status" jdbcType="INTEGER"/>
        <result property="applyDate" column="apply_date" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap type="com.project.domain.Vote" id="VoteResultMap">
        <result property="voteNum" column="vote_num" jdbcType="INTEGER"/>
        <result property="roomId" column="room_id" jdbcType="VARCHAR"/>
        <result property="voteMasterId" column="vote_master_id" jdbcType="VARCHAR"/>
        <result property="voteTitle" column="vote_title" jdbcType="VARCHAR"/>
        <result property="voteText" column="vote_text" jdbcType="VARCHAR"/>
        <result property="multiVoteCheck" column="multi_vote_check" jdbcType="VARCHAR"/>
        <result property="hideVoteCheck" column="hide_vote_check" jdbcType="VARCHAR"/>
        <result property="endDate" column="vote_end_date" jdbcType="DATE"/>
        <result property="endDateCheck" column="vote_end_date_check" jdbcType="VARCHAR"/>
        <result property="voteDate" column="vote_date" jdbcType="DATE"/>
        <result property="endCheck" column="vote_end_check" jdbcType="VARCHAR"/>
        <result property="voteItem1" column="vote_item_1" jdbcType="VARCHAR"/>
        <result property="voteItem2" column="vote_item_2" jdbcType="VARCHAR"/>
        <result property="voteItem3" column="vote_item_3" jdbcType="VARCHAR"/>
        <result property="voteItem4" column="vote_item_4" jdbcType="VARCHAR"/>
        <result property="voteItem5" column="vote_item_5" jdbcType="VARCHAR"/>
        <result property="totalVoter" column="total_voter" jdbcType="INTEGER"/>
        <result property="voter1" column="voter1" jdbcType="INTEGER"/>
        <result property="voter2" column="voter2" jdbcType="INTEGER"/>
        <result property="voter3" column="voter3" jdbcType="INTEGER"/>
        <result property="voter4" column="voter4" jdbcType="INTEGER"/>
        <result property="voter5" column="voter5" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap type="com.project.domain.Voter" id="VoterResultMap">
        <result property="voterNum" column="voter_num" jdbcType="INTEGER"/>
        <result property="voteNum" column="vote_num" jdbcType="INTEGER"/>
        <result property="voteItem" column="vote_item" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
    </resultMap>

    <!--여기서부터 쿼리 시작-->

    <!--clubService.addClub-->
    <!--모임 만들기-->
    <insert id="addClub" parameterType="com.project.domain.Club">
        INSERT
        INTO club(club_num,
                  club_master_id,
                  inter_list,
                  club_name,
                  club_text,
                  vill_code,
                  current_cluber,
                  club_create_date,
                  club_image,
                  gather_check,
                  club_tag,
                  club_delete_check)
        VALUES (seq_club.NEXTVAL,
                #{clubMasterId:VARCHAR},
                #{interList:CHAR},
                #{clubName:VARCHAR},
                #{clubText:VARCHAR},
                #{villCode:CHAR},
                1,
                SYSDATE,
                #{clubImage:VARCHAR},
                1,
                #{tag:VARCHAR},
                0)
    </insert>

    <!--모임장 등록-->
    <insert id="addClubMasterNewClub" parameterType="com.project.domain.Club">
        INSERT
        INTO club_user(
        club_user_num,
        user_id,
        user_image,
        club_num,
        cluber_status,
        club_reg_date,
        club_apply_date
        ) VALUES(
        seq_club_user.nextval,
        #{clubMasterId:VARCHAR},
        (SELECT user_image FROM users WHERE user_id = #{clubMasterId}),
        (<include refid="getNewClubNum"/>),
        '6',
        SYSDATE,
        SYSDATE
        )
    </insert>

    <!--새 모임의 모임번호 찾기-->
    <sql id="getNewClubNum">
        SELECT *
        FROM (SELECT club_num
              FROM club
              WHERE club_master_id = #{clubMasterId}
              ORDER BY club_num DESC)
        WHERE ROWNUM = 1
    </sql>

    <!--새모임 상세 조회-->
    <select id="getNewClub" parameterType="com.project.domain.Club" resultMap="ClubResultMap">
        SELECT *
        FROM (SELECT club_num,
                     club_master_id,
                     inter_list,
                     club_name,
                     club_text,
                     vill_code,
                     current_cluber,
                     club_create_date,
                     club_image,
                     gather_check,
                     club_tag,
                     club_delete_check
              FROM club
              WHERE club_master_id = #{clubMasterId}
              ORDER BY club_num DESC)
        WHERE ROWNUM = 1
    </select>

    <!--clubService.updateClub-->
    <!--모임 정보 수정-->
    <update id="updateClub" parameterType="com.project.domain.Club">
        UPDATE club
        <set>
            club_name = #{clubName},
            club_text = #{clubText},
            vill_code = #{villCode},
            club_image = #{clubImage},
            gather_check = #{gatherCheck},
            club_tag = #{tag}
        </set>
        <where>
            club_num = #{clubNum}
        </where>
    </update>

    <!--clubService.getClub-->
    <!--모임 상세 조회-->
    <select id="getClub" parameterType="int" resultMap="ClubResultMap">
        SELECT club_num,
               club_master_id,
               inter_list,
               club_name,
               club_text,
               vill_code,
               current_cluber,
               club_create_date,
               club_image,
               gather_check,
               club_tag,
               club_delete_check
        FROM club
        WHERE club_num = #{value}
    </select>

    <!--clubService.deleteClub-->
    <!--모임 삭제-->
    <update id="deleteClub" parameterType="int">
        UPDATE club
        <set>
            club_delete_check = '1'
        </set>
        <where>
            club_num = #{value}
        </where>
    </update>

    <!--clubService.listClub-->
    <!--리스트 조건걸어서 찾기-->

    <!--그냥 다 찾기-->
    <select id="listClub" parameterType="map" resultMap="ClubResultMap">
        SELECT c.*, l.like_check
        FROM club c,
             (SELECT board_num,
                     like_check
              FROM likes
              WHERE board_category = '12'
                AND user_id = #{userId}) l
        WHERE c.club_delete_check = '0'
          AND c.club_num = l.board_num(+)
        ORDER BY club_num DESC
    </select>

    <!--clubService.addCluberApply-->
    <!--모임 신청-->
    <!--이미 탈퇴했었으면 새로운 레코드 등록-->
    <insert id="addCluberApply" parameterType="com.project.domain.Cluber">
        INSERT
        INTO club_user(club_user_num,
                       user_id,
                       user_image,
                       club_num,
                       cluber_text,
                       cluber_status,
                       club_apply_date)
        VALUES (seq_club_user.nextval,
                #{user.userId},
                #{user.userImage},
                #{clubNum},
                #{cluberText},
                '2',
                SYSDATE)
    </insert>

    <!--clubService.updateCluberApply-->
    <!--찾아올때는 신청상태랑 아이디랑 모임번호로 들고오자-->
    <update id="updateCluberApply" parameterType="com.project.domain.Cluber">
        UPDATE club_user
        <set>
            cluber_text = #{cluberText}
        </set>
        <where>
            club_user_num = #{clubUserNum}
        </where>
    </update>

    <!--clubService.getCluberApplyUpdate-->
    <!--신청 수정 시 조회-->
    <select id="getCluberApplyUpdate" parameterType="com.project.domain.Cluber" resultMap="CluberResultMap">
        SELECT club_user_num,
        cluber_text
        FROM club_user
        <where>
            club_num = #{clubNum}
            AND user_id = #{user.userId}
            AND cluber_status = '2'
        </where>
    </select>

    <!--clubService.deleteCluberApply-->
    <!--신청중인 거 삭제-->
    <delete id="deleteCluberApply" parameterType="int">
        DELETE club_user
        <where>
            club_user_num = #{clubUserNum}
        </where>
    </delete>

    <!--clubService.listCluberApply-->
    <!--신청 목록 조회-->
    <select id="listCluberApply" parameterType="int" resultMap="CluberResultMap">
        SELECT club_user_num,
        user_id,
        user_image,
        club_apply_date,
        cluber_text,
        club_num
        FROM club_user
        <where>
            club_num = #{clubNum}
            AND cluber_status = '2'
        </where>
        ORDER BY club_user_num DESC
    </select>

    <!--clubService.getCluberApply-->
    <!--신청 목록에서 자기소개 조회-->
    <select id="getCluberApply" parameterType="int" resultType="String">
        SELECT cluber_text
        FROM club_user
        <where>
            club_user_num = #{clubUserNum}
        </where>
    </select>

    <!--clubService.processCluberApply-->
    <!--모임 가입 신청 처리-->
    <!--승인시 모임원 거절시 거절-->
    <update id="processCluberApply" parameterType="map">
        UPDATE club_user
        <set>
            cluber_status =
            <if test="result=='accept'">'4',
                club_reg_date = SYSDATE
            </if>
            <if test="result=='reject'">'3'</if>
        </set>
        <where>
            club_user_num = #{clubUserNum}
        </where>
    </update>

    <!--모임원 가입시 현재인원 증가-->
    <update id="updateClubNewCluber" parameterType="int">
        UPDATE club
        <set>
            current_cluber = current_cluber + 1
        </set>
        <where>
            club_num = #{clubNum}
        </where>
    </update>

    <!--clubService.addClubManager-->
    <!--매니저 임명-->
    <update id="addClubManager" parameterType="int">
        UPDATE club_user
        <set>
            cluber_status = '5'
        </set>
        <where>
            club_user_num = #{clubUserNum}
        </where>
    </update>

    <!--clubService.deleteClubManager-->
    <!--매니저 권한 박탈-->
    <update id="deleteClubManager" parameterType="int">
        UPDATE club_user
        <set>
            cluber_status = '4'
        </set>
        <where>
            club_user_num = #{clubUserNum}
        </where>
    </update>

    <!--clubService.updateClubMaster-->
    <!--현재 모임장 내림-->
    <update id="deleteClubMaster" parameterType="com.project.domain.Cluber">
        UPDATE club_user
        SET cluber_status = (SELECT cluber_status FROM club_user WHERE club_user_num = #{clubUserNum})
        <where>
            club_num = #{clubNum}
            AND cluber_status = '6'
        </where>
    </update>

    <!--새로운 모임장 등록-->
    <update id="addClubMaster" parameterType="com.project.domain.Cluber">
        UPDATE club_user
        SET cluber_status = '6'
        <where>
            club_user_num = #{clubUserNum}
        </where>
    </update>

    <!--모임의 정보 수정-->
    <update id="updateClubMaster" parameterType="com.project.domain.Cluber">
        UPDATE club
        SET club_master_id = (SELECT user_id FROM club_user WHERE club_user_num = #{clubUserNum})
        <where>
            club_num = #{clubNum}
        </where>
    </update>

    <!--clubService.deleteCluber-->
    <!--탈퇴 및 강퇴-->
    <update id="deleteCluber" parameterType="map">
        UPDATE club_user
        <set>
            cluber_status =
            <if test="kickoutCheck=='F'.toString()">'7'</if>
            <if test="kickoutCheck=='T'.toString()">'8'</if>,
            club_out_text = #{cluber.clubOutText},
            club_out_date = SYSDATE
        </set>
        <where>
            club_user_num = #{cluber.clubUserNum}
        </where>
    </update>

    <!--탈퇴 요청 시 조회-->
    <select id="getCluberDelete" parameterType="com.project.domain.Cluber" resultType="int">
        SELECT club_user_num
        FROM club_user
        <where>
            club_num = #{clubNum}
            AND user_id = #{user.userId}
            AND cluber_status IN ('4','5')
        </where>
    </select>

    <!--모임원 수 감소-->
    <update id="updateClubDeleteCluber" parameterType="int">
        UPDATE club
        <set>
            current_cluber = current_cluber - 1
        </set>
        <where>
            club_num = #{clubNum}
        </where>
    </update>

    <!--clubService.listCluber-->
    <!--모임원 목록 조회-->
    <select id="back_listCluber" parameterType="int" resultMap="CluberResultMap">
        SELECT club_user_num,
               user_id,
               user_image,
               club_num,
               cluber_status,
               club_reg_date,
               club_apply_date,
               cluber_text,
               club_out_text,
               club_out_date,
               blacklist_date,
               blacklist_text,
               blacklist_check
        FROM club_user
        WHERE club_num = #{clubNum}
          AND cluber_status IN ('4', '5', '6', '7', '8')
        ORDER BY club_user_num DESC
    </select>

    <sql id="listCluberSql">
        SELECT club_user_num,
        user_id,
        user_image,
        club_num,
        cluber_status,
        club_reg_date,
        club_apply_date,
        cluber_text,
        club_out_text,
        club_out_date,
        blacklist_date,
        blacklist_text,
        blacklist_check
        FROM club_user
        WHERE club_num = #{clubNum}
        AND cluber_status IN (
        <if test="search.searchCondition == 0">
            '4', '5', '6'
        </if>
        <if test="search.searchCondition == 1">
            '7', '8'</if>)
        ORDER BY club_user_num DESC
    </sql>

    <select id="getTotalCluber" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM (
        <include refid="listCluberSql"/>
        )
    </select>

    <select id="listCluber" parameterType="map" resultMap="CluberResultMap">
        SELECT * FROM (
        SELECT ROWNUM row_num, vt.* FROM (
        <include refid="listCluberSql"/>
        ) vt
        <if test="search.currentPage*search.pageSize!=0">
            WHERE ROWNUM &lt;= #{search.currentPage}*#{search.pageSize}
        </if>
        )
        <where>
            <if test="search.currentPage*search.pageSize!=0">
                row_num >= ((#{search.currentPage}-1)*#{search.pageSize}+1)
            </if>
        </where>
    </select>

    <select id="getCluberCondition" parameterType="map" resultType="String">
        SELECT cluber_status
        FROM club_user
        WHERE club_num = #{clubNum}
          AND user_id = #{user.userId}
          AND cluber_status in ('4', '5', '6')
    </select>

    <!--clubService.getCluber-->
    <!--모임원 상세 조회-->
    <select id="getCluber" parameterType="int" resultMap="CluberResultMap">
        SELECT club_user_num,
               user_id,
               user_image,
               club_num,
               cluber_status,
               club_reg_date,
               club_apply_date,
               cluber_text,
               club_out_text,
               club_out_date,
               blacklist_date,
               blacklist_text,
               blacklist_check
        FROM club_user
        WHERE club_user_num = #{clubUserNum}
    </select>

    <!--clubService.updateCluber-->
    <!--모임원 자기소개 수정-->
    <update id="updateCluber" parameterType="com.project.domain.Cluber">
        UPDATE club_user
        SET cluber_text = #{cluberText}
        WHERE club_user_num = #{clubUserNum}
    </update>

    <!--clubService.addClubBlacklist-->
    <!--블랙리스트 추가-->
    <insert id="addClubBlacklist" parameterType="com.project.domain.Cluber">
        INSERT
        INTO club_user(club_user_num,
                       user_id,
                       user_image,
                       club_num,
                       cluber_status,
                       blacklist_date,
                       blacklist_text,
                       blacklist_check)
        VALUES (seq_club_user.nextval,
                #{user.userId},
                (SELECT user_image FROM users WHERE user_id = #{user.userId}),
                #{clubNum},
                '9',
                SYSDATE,
                #{blacklistText},
                '1')
    </insert>

    <!--clubService.updateClubBlacklist-->
    <!--모임 블랙리스트 재등록 및 취소-->
    <update id="updateClubBlacklist" parameterType="map">
        UPDATE club_user
        <set>
            blacklist_check=
            <if test='process=="T"'>'1'</if>
            <if test='process=="F"'>'2'</if>
        </set>
        <where>
            club_user_num IN
            <foreach collection="list" open="(" separator="," close=")" item="clubUserNum">
                #{clubUserNum}
            </foreach>
        </where>
    </update>

    <!--clubService.listClubBlacklist-->
    <!--모임 블랙리스트 목록 조회-->
    <select id="back_listClubBlacklist" parameterType="int" resultMap="CluberResultMap">
        SELECT club_user_num,
               user_id,
               user_image,
               blacklist_date,
               blacklist_check
        FROM club_user
        WHERE club_num = #{clubNum}
          AND cluber_status = '9'
    </select>

    <sql id="listClubBlacklistSql">
        SELECT club_user_num,
        user_id,
        user_image,
        blacklist_date,
        blacklist_check
        FROM club_user
        WHERE club_num = #{clubNum}
        AND cluber_status = '9'
        <choose>
            <when test="search.searchCondition==1">AND blacklist_check = '1'</when>
            <when test="search.searchCondition==2">AND blacklist_check = '2'</when>
        </choose>
        ORDER BY blacklist_date DESC
    </sql>

    <select id="getTotalClubBlacklist" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM (
        <include refid="listClubBlacklistSql"/>
        )
    </select>

    <select id="listClubBlacklist" parameterType="map" resultMap="CluberResultMap">
        SELECT * FROM (
        SELECT ROWNUM row_num, vt.* FROM (
        <include refid="listClubBlacklistSql"/>
        ) vt
        <if test="search.currentPage*search.pageSize!=0">
            WHERE ROWNUM &lt;= #{search.currentPage}*#{search.pageSize}
        </if>
        )
        <where>
            <if test="search.currentPage*search.pageSize!=0">
                row_num >= ((#{search.currentPage}-1)*#{search.pageSize}+1)
            </if>
        </where>
    </select>

    <!--clubService.getClubBlacklist-->
    <!--모임 블랙리스트 상세 조회-->
    <select id="getClubBlacklist" parameterType="int" resultType="string">
        SELECT blacklist_text
        FROM club_user
        WHERE club_user_num = #{clubUserNum}
    </select>

    <!--clubService.addClubMasterBoard-->
    <!--모임 공지사항 작성-->
    <insert id="addClubMasterBoard" parameterType="com.project.domain.ClubMasterBoard">
        INSERT
        INTO club_master_board(club_master_board_num,
                               club_num,
                               user_id,
                               title,
                               text,
                               reg_date)
        VALUES (seq_club_master_board.NEXTVAL,
                #{clubNum},
                #{userId},
                #{title},
                #{text},
                SYSDATE)
    </insert>

    <!--신규 넘버 조회-->
    <select id="getClubMasterBoardNum" parameterType="String" resultType="int">
        SELECT club_master_board_num
        FROM (SELECT ROWNUM,
                     club_master_board_num
              FROM club_master_board
              WHERE user_id = #{userId}
              ORDER BY reg_date DESC)
        WHERE ROWNUM = 1
    </select>

    <!--파일 등록-->
    <insert id="addClubMasterBoardFile" parameterType="com.project.domain.File">
        INSERT
        INTO files(file_num,
                   board_num,
                   board_category,
                   file_name)
        VALUES (seq_files.NEXTVAL, #{boardNum}, '04', #{fileName})
    </insert>

    <!--clubService.updateClubMasterBoard-->
    <!--모임 공지사항 수정-->
    <update id="updateClubMasterBoard" parameterType="com.project.domain.ClubMasterBoard">
        UPDATE club_master_board
        <set>
            title = #{title},
            text = #{text},
            update_date = SYSDATE
        </set>
        <where>
            club_master_board_num = #{boardNum}
        </where>
    </update>

    <!--현재 파일 조회-->
    <select id="listClubMasterBoardCurrentFile" parameterType="int" resultType="String">
        SELECT file_name
        FROM files
        WHERE board_num = #{clubMasterBoardNum}
          AND board_category = '04'
    </select>

    <!--파일 삭제-->
    <delete id="deleteClubMasterBoardFile" parameterType="map">
        DELETE files
        <where>
            board_num = #{boardNum}
            AND board_category = '04'
            <foreach collection="deleteFileNames" item="fileName" open="AND file_name IN (" separator="," close=")">
                #{fileName}
            </foreach>
        </where>
    </delete>

    <!--clubService.deleteClubMasterBoard-->
    <!--모임 공지사항 삭제-->
    <delete id="deleteClubMasterBoard" parameterType="int">
        DELETE club_master_board
        <where>
            club_master_board_num = #{clubMasterBoardNum}
        </where>
    </delete>

    <!--clubService.listClubMasterBoard-->
    <!--모임 공지사항 목록 조회-->
    <select id="back_listClubMasterBoard" parameterType="int" resultMap="ClubMasterBoardResultMap">
        SELECT club_master_board_num,
               user_id,
               title,
               reg_date,
               update_date
        FROM club_master_board
        WHERE club_num = #{clubNum}
        ORDER BY reg_date DESC
    </select>

    <sql id="listClubMasterBoardSql">
        SELECT club_master_board_num,
               user_id,
               title,
               reg_date,
               update_date
        FROM club_master_board
        WHERE club_num = #{clubNum}
          AND title LIKE ('%' || #{search.searchKeyword} || '%')
        ORDER BY reg_date DESC
    </sql>

    <select id="getTotalClubMasterBoard" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM (
        <include refid="listClubMasterBoardSql"/>
        )
    </select>

    <select id="listClubMasterBoard" parameterType="map" resultMap="ClubMasterBoardResultMap">
        SELECT * FROM (
        SELECT ROWNUM row_num, vt.* FROM (
        <include refid="listClubMasterBoardSql"/>
        ) vt
        <if test="search.currentPage*search.pageSize!=0">
            WHERE ROWNUM &lt;= #{search.currentPage}*#{search.pageSize}
        </if>
        )
        <where>
            <if test="search.currentPage*search.pageSize!=0">
                row_num >= ((#{search.currentPage}-1)*#{search.pageSize}+1)
            </if>
        </where>
    </select>

    <!--clubService.getClubMasterBoard-->
    <!--모임 공지사항 상세 조회-->
    <select id="getClubMasterBoard" parameterType="int" resultMap="ClubMasterBoardResultMap">
        SELECT club_master_board_num,
               club_num,
               user_id,
               title,
               text,
               reg_date,
               update_date
        FROM club_master_board
        WHERE club_master_board_num = #{clubMasterBoardNum}
    </select>

    <!--clubService.addClubCalendarApply-->
    <!--모임 일정 참여 신청-->
    <insert id="addClubCalendarApply" parameterType="map">
        INSERT
        INTO club_calendar_apply(club_calendar_apply_num,
        club_calendar_num,
        user_id,
        apply_status,
        user_image,
        apply_date)
        VALUES(seq_club_calendar_apply.NEXTVAL,
        #{calendarCluber.clubCalendarNum},
        #{calendarCluber.user.userId},
        <if test='applyAutoCheck=="2"'>'1'</if>
        <if test='applyAutoCheck=="1"'>'0'</if>,
        #{calendarCluber.user.userImage},
        SYSDATE)
    </insert>

    <!--clubService.deleteClubCalendarApply-->
    <!--모임 일정 참여 취소-->
    <delete id="deleteClubCalendarApply" parameterType="map">
        DELETE club_calendar_apply
        <where>
            club_calendar_num = #{clubCalendarNum}
            AND user_id = #{userId}
            AND apply_status = '0'
        </where>
    </delete>

    <!--clubService.listClubCalendarApply-->
    <!--모임 일정 참여 신청 목록-->
    <select id="listClubCalendarApply" parameterType="map" resultMap="CalendarCluberResultMap">
        SELECT club_calendar_apply_num,
        user_id,
        user_image,
        apply_date
        FROM club_calendar_apply
        <where>
            apply_status = #{applyStatus}
            AND club_calendar_num = #{clubCalendarNum}
        </where>
        ORDER BY club_calendar_apply_num DESC
    </select>

    <!--clubService.updateClubCalendarApply-->
    <!--모임 일정 참여 신청 처리-->
    <update id="updateClubCalendarApply" parameterType="map">
        UPDATE club_calendar_apply
        <set>
            apply_status =
            <if test='process=="accept"'>1</if>
            <if test='process=="reject"'>2</if>
        </set>
        <where>
            club_calendar_apply_num = #{clubCalendarApplyNum}
        </where>
    </update>

    <!--clubService.addVote-->
    <!--투표 등록-->
    <insert id="addVote" parameterType="com.project.domain.Vote">
        INSERT INTO vote(vote_num,
                         room_id,
                         vote_master_id,
                         vote_title,
                         vote_text,
                         multi_vote_check,
                         hide_vote_check,
                         vote_end_date,
                         vote_end_date_check,
                         vote_date,
                         vote_end_check,
                         vote_item_1,
                         vote_item_2,
                         vote_item_3,
                         vote_item_4,
                         vote_item_5)
        VALUES (seq_vote.NEXTVAL,
                #{roomId},
                #{voteMasterId},
                #{voteTitle},
                #{voteText},
                #{multiVoteCheck},
                #{hideVoteCheck},
                #{endDate:DATE},
                #{endDateCheck},
                SYSDATE,
                '0',
                #{voteItem1},
                #{voteItem2:VARCHAR},
                #{voteItem3:VARCHAR},
                #{voteItem4:VARCHAR},
                #{voteItem5:VARCHAR})
    </insert>

    <!--clubService.updateVote-->
    <!--투표 수정-->
    <!--엔드체크 있으면 마감변경, 없으면 내용 변경-->
    <update id="updateVote" parameterType="com.project.domain.Vote">
        UPDATE VOTE
        SET
        <if test="endCheck!=null">vote_end_check = #{endCheck}</if>
        <if test="endCheck==null">
            vote_title = #{voteTitle},
            vote_text = #{voteText},
            multi_vote_check = #{multiVoteCheck},
            hide_vote_check = #{hideVoteCheck},
            vote_end_date_check = #{endDateCheck},
            vote_end_date = #{endDate:DATE},
            vote_item_1 = #{voteItem1},
            vote_item_2 = #{voteItem2:VARCHAR},
            vote_item_3 = #{voteItem3:VARCHAR},
            vote_item_4 = #{voteItem4:VARCHAR},
            vote_item_5 = #{voteItem5:VARCHAR}
        </if>
        WHERE vote_num = #{voteNum}
    </update>

    <!--clubService.deleteVote-->
    <!--투표 삭제-->
    <delete id="deleteVote" parameterType="int">
        DELETE vote
        WHERE vote_num = #{voteNum}
    </delete>

    <!--clubService.deleteVote-->
    <!--clubService.updateVoter-->
    <!--제출 투표 삭제-->
    <!--아이디 있으면 그사람 것만, 없으면 전체 삭제 => 투표 삭제를 위함-->
    <delete id="deleteVoter" parameterType="map">
        DELETE voter
        WHERE
        vote_num = #{voteNum}
        <if test="userId != null">AND user_id = #{userId}</if>
    </delete>

    <!--clubService.listVote-->
    <!--투표 리스트-->
    <select id="listVote" parameterType="string" resultMap="VoteResultMap">
        select vote_num,
               room_id,
               vote_master_id,
               vote_title,
               vote_end_date,
               vote_end_date_check,
               vote_date,
               vote_end_check
        FROM vote
        WHERE room_id = #{roomId}
    </select>

    <!--clubService.getVote-->
    <!--투표 상세-->
    <select id="getVote" parameterType="int" resultMap="VoteResultMap">
        select vote_num,
               room_id,
               vote_master_id,
               vote_title,
               vote_text,
               multi_vote_check,
               hide_vote_check,
               vote_end_date,
               vote_end_date_check,
               vote_date,
               vote_end_check,
               vote_item_1,
               vote_item_2,
               vote_item_3,
               vote_item_4,
               vote_item_5,
               (select COUNT(*)
                FROM voter
                where vote_num = #{voteNum}
                  and VOTE_ITEM = (select vote_item_1 from VOTE where VOTE_NUM = #{voteNum})) voter1,
               (select COUNT(*)
                FROM voter
                where vote_num = #{voteNum}
                  and VOTE_ITEM = (select vote_item_2 from VOTE where VOTE_NUM = #{voteNum})) voter2,
               (select COUNT(*)
                FROM voter
                where vote_num = #{voteNum}
                  and VOTE_ITEM = (select vote_item_3 from VOTE where VOTE_NUM = #{voteNum})) voter3,
               (select COUNT(*)
                FROM voter
                where vote_num = #{voteNum}
                  and VOTE_ITEM = (select vote_item_4 from VOTE where VOTE_NUM = #{voteNum})) voter4,
               (select COUNT(*)
                FROM voter
                where vote_num = #{voteNum}
                  and VOTE_ITEM = (select vote_item_5 from VOTE where VOTE_NUM = #{voteNum})) voter5,
               (select COUNT(distinct user_id) FROM voter where vote_num = #{voteNum})        total_voter
        FROM vote
        WHERE vote_num = #{voteNum}
    </select>

    <!--clubService.listVoter-->
    <!--clubService.updateVoter-->
    <!--제출 투표 조회-->
    <!--유저 아이디 있으면 수정용으로 내거 조회, 없으면 해당 투표 제출자 조회-->
    <select id="listVoter" parameterType="com.project.domain.Voter" resultMap="VoterResultMap">
        SELECT voter_num, vote_num, vote_item, user_id
        FROM voter
        WHERE vote_num = #{voteNum}
        <if test="userId==null">AND vote_item = #{voteItem}</if>
        <if test="userId!=null">AND user_id = #{userId}</if>
    </select>

    <!--clubService.addVoter-->
    <!--clubService.updateVoter-->
    <!--투표 제출-->
    <!--업데이트시 다 삭제 후 다시 등록-->
    <insert id="addVoter" parameterType="com.project.domain.Voter">
        insert into voter(voter_num, vote_num, vote_item, user_id)
        VALUES (SEQ_VOTER.nextval, #{voteNum}, #{voteItem}, #{userId})
    </insert>

</mapper>